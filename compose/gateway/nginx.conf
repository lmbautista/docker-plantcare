load_module /etc/nginx/modules/ngx_http_perl_module.so;

env GATEWAY_HOST;
env GATEWAY_DEFAULT_SERVICE;
env GATEWAY_API_SERVICE;

user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 50;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;

  sendfile on;

  keepalive_timeout 65;

  resolver 127.0.0.11; # Docker's default nameserver.

  perl_set $gateway_host 'sub { return $ENV{"GATEWAY_HOST"}; }';
  perl_set $proxy_pass_host 'sub {
    my $r = shift;
    my $service_host = $r->variable("host");

    if ($service_host =~ /(.)*(\.)?api\.$ENV{"GATEWAY_HOST"}/) {
      return $ENV{"GATEWAY_API_SERVICE"};
    } else {
      return $ENV{"GATEWAY_DEFAULT_SERVICE"};
    };
  }';

  perl_set $proxy_pass_uri 'sub {
    my $r = shift;
    my $service_host = $r->variable("host");
    my $request_uri = $r->variable("request_uri");
    return $request_uri;
  }';

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
  }

  server {
    listen 80 default_server;
    listen 443 ssl;

    client_max_body_size 0;

    ssl_certificate /etc/ssl/certs/gateway.crt;
    ssl_certificate_key /etc/ssl/private/gateway.key;

    proxy_buffers 64 16k;
    proxy_max_temp_file_size 1024m;
    proxy_connect_timeout 5s;
    proxy_send_timeout 3600s;
    proxy_read_timeout 3600s;

    location / {
      auth_basic           off;
      auth_basic_user_file /etc/nginx/.htpasswd;

      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://$proxy_pass_host:8080$proxy_pass_uri;
      add_header X-Service-Host $proxy_pass_host always;

      # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
    location /images {
      alias /etc/nginx/html/uploads/attachments;
      autoindex off;
      expires 30d;
    }
  }
}


